const { Schema,model } = require('mongoose')

const schema = new Schema({
    totalStudents:{
        type:String,
        trim:true
    },
    workingDays:{
        type:String,
        trim:true
    },
    presentDays:{
        type:String,
        trim:true
    },
    session:{
        type:String,
        trim:true
    },
    types:{
        type:String,
        trim:true,

    },
    result:{
        type:String,
        trim:true,
    },
    totalSubject:String,
    targetTotalSubjectNumber:String,
    totalSubjectObtainedNumber:String,
    totalGradePoint:String,
    gradePoint:String,
    grade:String,
    
    rank:{
        type:String,
        trim:true 
    },
    comments:{
        type:String,
        trim:true
    },
    signatureOfPrinciple:String,
    signatureOfTeacher:String,
    submited:{
        type:Boolean
    },
    approved:{
        type:Boolean
    },
    published:{
        type:Boolean
    },
    rejected:{
        type:Boolean
    },
    passedOrFailed:{
        type:Boolean
    },
    dateOfResultPublication:{
        type:String,
        trim:true
    },
    subjects:[
        {
        name:{
            type:String,
            trim:true,
        },
        obtainedMarks:{
            type:String,
            trim:true,
        },
        grade:{
            type:String,
            trim:true,
        
        },
        gradePoint:{
            type:String,
            trim:true
        },
        passedMarks:String,
        fullMarks:String,
        code:String,
        latterGread:String,
        greadPoint:String
        }
    ],
    subjectAandSubjectB:[
        {
        name:{
            type:String,
            trim:true,
        },
        obtainedMarks:{
            type:String,
            trim:true,
        },
        grade:{
            type:String,
            trim:true,
        
        },
        gradePoint:{
            type:String,
            trim:true
        },
        combinationObtainedMarks:{
            type:String,
            trim:true 
        },
        passedMarks:String,
        fullMarks:String,
        code:String,
        }
    ],
    optionalSubject:[
        {
        name:{
            type:String,
            trim:true,
        
        },
        obtainedMarks:{
            type:String,
            trim:true,
        
        },
        grade:{
            type:String,
            trim:true,
        
        },
        gradePoint:{
            type:String,
            trim:true
        },
        passedMarks:String,
        fullMarks:String,
        code:String,

        latterGread:String,
        greadPoint:String
        }
    ],
    studentInformation:{
        classed:String,
        section:String,
        group:String,
        roll:String,
        id:String
    },
    student:{
        type:Schema.Types.ObjectId,
        ref:'Student'
    },
    classid:{
        type:Schema.Types.ObjectId,
        ref:'Class'
    },
    examination:{
        type:Schema.Types.ObjectId,
        ref:'Examination'
    },
    examinationType:{
        type:Schema.Types.ObjectId,
        ref:'ExaminationType'
    },
    request:{
        type:Schema.Types.ObjectId,
        ref:'Request'
    }

})

const Result = new model('Result',schema)
module.exports = Result